#!/bin/sh

MODULE_LIST="$MODULE_LIST network"

network_myself="network"
network_start_order=24
network_stop_order=71
network_needed_config="network.conf network_ipv6.conf"
network_crucial="yes"

func_network_start(){
      local RC=0
      local interface="$( $PIRATEBOX_FOLDER/bin/find_interface_name.sh service "$IFCONFIG_INTERFACE" )"
       if   echo "$interface" | grep -q "ERROR"   ; then
		echo ""
		echo "... $interface"
		echo ""		
		_check_rc_ "$network_myself" 255		
		return 255
       fi
       
	ifconfig $interface  $IP netmask $NETMASK   up
	RC=$?
	[ $RC -ne 0 ] &&  _check_rc_  "$network_myself"  "$RC"  "$network_crucial"  && return $RC
	
	
        if [ $IPV6_ENABLE = "yes" ] ; then
		local IPv6="$IPV6_IP"/"$IPV6_MASK"
		 ifconfig $interface  add  $IPv6
		 [ $RC -ne 0 ] &&  _check_rc_  "$network_myself"  "$RC"  "$network_crucial"  && return $RC
	fi
       _check_rc_  "$network_myself"  "$RC"  "$network_crucial" 
       return   $RC
}

func_network_stop(){
      local interface=$( $PIRATEBOX_FOLDER/bin/find_interface_name.sh service "$IFCONFIG_INTERFACE" )
       if [ "$?" != "0" ] ; then
		echo ""
		echo "... $interface"
		echo ""		
		_check_rc_ "$network_myself" 255		
		return 255
       fi
	ifconfig $interface down
	local RC=$?
	_check_rc_ "$network_myself"  "$RC"
       return   $RC
}

func_network_get_config(){
	echo $network_needed_config
}
func_network_get_start_order(){
	echo $network_start_order
}
func_network_get_stop_order(){
	echo $network_stop_order
}